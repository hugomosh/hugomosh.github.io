{"version":3,"sources":["grid.ts","index.ts"],"names":[],"mappings":";AA4FA,aA3FA,IAAI,EACA,EACA,EACA,EAwFJ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAvFA,IAAI,GAAW,EACT,EAAY,GAEZ,EAAgB,SAAC,GACb,IAAA,EAAS,EAAU,aACnB,EAAQ,EAAU,YACjB,OAAA,KAAK,MAAM,EAAS,GAAa,KAAK,MAAM,EAAQ,IAGzD,EAAS,WACP,IAAA,EAAA,CACJ,GAAW,EACL,IAAA,EAAU,EAAc,GAC1B,GAAA,GAAW,EACP,IAAA,MAAM,GAAS,UAAK,GAAW,QAAQ,SAAC,EAAG,GACvC,GAAA,EAAK,GACL,EAAK,GAAG,UAAY,aACjB,CACG,IAAA,EAAI,SAAS,cAAc,OACjC,EAAE,UAAY,SACd,EAAE,MAAM,gBAAkB,IAC1B,EAAU,YAAY,GACtB,EAAK,KAAK,UAGf,CACG,IAAA,EAAO,EAAK,OACd,IAAA,MAAM,EAAO,GAAS,UAAK,GAAW,QAAQ,SAAC,EAAG,GAClD,EAAK,EAAO,EAAI,GAAG,UAAU,IAAI,YAGzC,QAAQ,OAAO,EAAU,cAAgB,OAAO,YAAa,WAC7D,EAAc,EACd,GAAW,IAGT,EAAiB,WAGd,IAFD,IACA,EAAQ,IACH,EAAI,EAAG,EAAI,EAAG,IACnB,GAHU,mBAGO,KAAK,MAAsB,GAAhB,KAAK,WAE9B,OAAA,GAIL,EAAQ,SAAC,GAAE,IAAA,EAAA,EAAA,cAET,EAAQ,SAAS,cAAc,SACnC,EAAM,UAAY,4MASN,EAAY,GAAC,wBACZ,EAAY,GAAC,oKAU1B,SAAS,KAAK,YAAY,GAC1B,EAAO,UAAY,iBACnB,EAAY,EACZ,EAAc,EAAc,GAE5B,EAAO,IAAI,MAAM,GAAa,UAAK,GAAW,IAAI,SAAC,EAAG,GAC5C,IAAA,EAAI,SAAS,cAAc,OAI1B,OAHP,EAAE,UAAY,SACd,EAAE,MAAM,gBAAkB,IAC1B,EAAO,YAAY,GACZ,IAEX,OAAO,SAAW,SAAC,GACf,aAAa,GACb,EAAe,WAAW,EAAQ,OAGpC,EAAO,CAAE,MAAK,GACpB,QAAA,QAAe;;;;AClFf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAVA,IAAA,EAAA,EAAA,QAAA,WACA,QAAA,eAEA,QAAQ,IACJ,sIAKJ,IAAM,EAAO,SAAS,cAAc,QACpC,EAAA,QAAK,MAAM,CAAE,cAAe","file":"hugomosh-grid.f3a4879b.js","sourceRoot":"..","sourcesContent":["\nlet container;\nlet resizeTimeot;\nlet currentSize;\nlet list;\nlet resizing = false;\nconst minSquare = 14;\n\nconst calculateGrid = (container: HTMLElement) => {\n    const height = container.clientHeight;\n    const width = container.clientWidth;\n    return Math.floor(height / minSquare) * Math.floor(width / minSquare);\n}\n\nconst resize = () => {\n    if (resizing) return;\n    resizing = true;\n    const newSize = calculateGrid(container);\n    if (newSize >= currentSize) {\n        new Array(newSize).fill(undefined).forEach((_, i) => {\n            if (list[i]) {\n                list[i].className = \"square\";\n            } else {\n                const e = document.createElement(\"div\");\n                e.className = \"square\";\n                e.style.backgroundColor = getRandomColor();\n                container.appendChild(e);\n                list.push(e);\n            }\n        })\n    } else {\n        const lLen = list.length;\n        new Array(lLen - newSize).fill(undefined).forEach((_, i) => {\n            list[lLen - 1 - i].classList.add(\"hidden\");\n        });\n    }\n    console.assert(container.clientHeight <= window.innerHeight, \"Bigger!\")\n    currentSize = newSize;\n    resizing = false;\n};\n\nconst getRandomColor = () => {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\n\nconst start = ({ parentElement: parent }: { parentElement: HTMLElement }) => {\n\n    var style = document.createElement('style');\n    style.innerHTML = `\n    .flex-container {\n        flex-wrap: wrap;\n        display: flex;\n        align-content: flex-start;\n        justify-content: center;\n        margin: 0;\n    }\n    .square{\n        width:${minSquare - 4}px;\n        height:${minSquare - 4}px;\n        margin: 2px;\n        box-sizing: border-box;\n        opacity:1;\n    }\n    .hidden{\n        opacity:0;\n        visibility: hidden;\n    }\n    `;\n    document.head.appendChild(style);\n    parent.className = \"flex-container\";\n    container = parent;\n    currentSize = calculateGrid(parent);\n\n    list = new Array(currentSize).fill(undefined).map((_, i) => {\n        const e = document.createElement(\"div\");\n        e.className = \"square\";\n        e.style.backgroundColor = getRandomColor();\n        parent.appendChild(e);\n        return e;\n    });\n    window.onresize = (ev) => {\n        clearTimeout(resizeTimeot);\n        resizeTimeot = setTimeout(resize, 100);\n    };\n}\nconst grid = { start };\nexport default grid;","import grid from './grid'\nimport './main.scss';\n\nconsole.log(\n    `Hi,\n    I am Hugo Mosh. Nice seing you around here.\n    Yo can contact me at some social network by the alias of hugomosh.\n    `);\n\nconst body = document.querySelector(\"body\");\ngrid.start({ parentElement: body }); "]}